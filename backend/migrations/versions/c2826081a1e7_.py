"""empty message

Revision ID: c2826081a1e7
Revises: 7ea46f53fc83
Create Date: 2023-09-16 15:28:24.020541

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c2826081a1e7'
down_revision = '7ea46f53fc83'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('scheduled_assessments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('assessment_type', sa.String(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=True),
    sa.Column('observer_id', sa.Integer(), nullable=True),
    sa.Column('selected_assessment', sa.String(), nullable=False),
    sa.Column('scheduled_timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['observer_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['selected_assessment'], ['form.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('aggregated_scores_traits', schema=None) as batch_op:
        batch_op.drop_index('ix_aggregated_scores_traits_index')

    op.drop_table('aggregated_scores_traits')
    with op.batch_alter_table('gpt_reports', schema=None) as batch_op:
        batch_op.drop_index('ix_gpt_reports_index')

    op.drop_table('gpt_reports')
    with op.batch_alter_table('df_merged_results', schema=None) as batch_op:
        batch_op.drop_index('ix_df_merged_results_index')

    op.drop_table('df_merged_results')
    with op.batch_alter_table('aggregated_scores_facets', schema=None) as batch_op:
        batch_op.drop_index('ix_aggregated_scores_facets_index')

    op.drop_table('aggregated_scores_facets')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('aggregated_scores_facets',
    sa.Column('index', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('observant_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('form_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Trait', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Facet', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('answer_number', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True)
    )
    with op.batch_alter_table('aggregated_scores_facets', schema=None) as batch_op:
        batch_op.create_index('ix_aggregated_scores_facets_index', ['index'], unique=False)

    op.create_table('df_merged_results',
    sa.Column('index', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('answer_type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('answer_text', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('answer_choice_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('answer_choice_label', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('answer_number', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('field_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('form_response_id_x', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('form_response_id_y', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('field_type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('field_title', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('field_nonunique_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('composite_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('question_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('question_text', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('question_number', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Trait', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Facet', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('NRCode', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('event_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('form_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('token', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('submitted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('observant_id', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    with op.batch_alter_table('df_merged_results', schema=None) as batch_op:
        batch_op.create_index('ix_df_merged_results_index', ['index'], unique=False)

    op.create_table('gpt_reports',
    sa.Column('index', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('report_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('observant_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('assessment_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('report_text', sa.TEXT(), autoincrement=False, nullable=True)
    )
    with op.batch_alter_table('gpt_reports', schema=None) as batch_op:
        batch_op.create_index('ix_gpt_reports_index', ['index'], unique=False)

    op.create_table('aggregated_scores_traits',
    sa.Column('index', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('observant_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('form_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Trait', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('answer_number', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True)
    )
    with op.batch_alter_table('aggregated_scores_traits', schema=None) as batch_op:
        batch_op.create_index('ix_aggregated_scores_traits_index', ['index'], unique=False)

    op.drop_table('scheduled_assessments')
    # ### end Alembic commands ###
